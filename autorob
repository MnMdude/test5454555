repeat task.wait() until game:IsLoaded()

loadstring(game:HttpGet("https://pastebin.com/raw/Dffn96Gz"))()

local TweenService = game:GetService("TweenService")

local flyspeed = getgenv().FlySpeed

function shop(min, max)
    local goofyahhvalue = math.random(min, max)
    local Player = game.Players.LocalPlayer    
    local Http = game:GetService("HttpService")
    local TPS = game:GetService("TeleportService")
    local Api = "https://games.roblox.com/v1/games/"

    local _place,_id = game.PlaceId, game.JobId
    local _servers = Api.._place.."/servers/Public?sortOrder=Desc&limit=100"
    
    -- Retry logic for server hop
    local retryLimit = 3
    local retryCount = 0
    
    function ListServers(cursor)
        local success, Raw = pcall(function()
            return game:HttpGet(_servers .. ((cursor and "&cursor="..cursor) or ""))
        end)
        if success then
            return Http:JSONDecode(Raw)
        else
            return nil
        end
    end

    local Next
    repeat
        task.wait(1)  -- Wait before fetching server list
        local Servers = ListServers(Next)
        
        if Servers == nil then
            warn("Failed to get server list. Retrying...")
            retryCount = retryCount + 1
            if retryCount >= retryLimit then
                warn("Max retries reached. Stopping server hop.")
                return  -- Stop if we reach the retry limit
            end
            continue
        end

        for i, v in next, Servers.data do
            if v.playing < goofyahhvalue and v.id ~= _id then
                local success, result = pcall(TPS.TeleportToPlaceInstance, TPS, _place, v.id, Player)
                if success then
                    task.wait(5)
                    return  -- Stop after successfully hopping
                else
                    warn("Failed to teleport to server. Retrying...")
                end
            end
        end
        
        Next = Servers.nextPageCursor
    until not Next
end

getgenv().shop = shop

workspace:WaitForChild("Ignore")
workspace:WaitForChild("ComputerStore"):WaitForChild("Lasers"):Destroy()
workspace:WaitForChild("JewelryStore"):WaitForChild("Jewlery"):WaitForChild("Lasers"):Destroy()
task.wait(0.5)
for i, v in next, workspace.Ignore.WorldObjects:GetChildren() do
    if v.Name == "Lasers" then
        v:Destroy()
    end
end

game:GetService("ReplicatedStorage"):WaitForChild("RemoteFunction"):InvokeServer("SetTeam", getgenv().Team)

task.spawn(function()
    task.wait(40)
    shop(getgenv().ServerHop.min, getgenv().ServerHop.max)
end)

task.wait(getgenv().TimeToLoad)

local char = workspace:WaitForChild(game:GetService("Players").LocalPlayer.Name)
local hrp = char:WaitForChild("HumanoidRootPart")

function tweenTp(x, y, z, speed)
    local pos = Vector3.new(x, y, z)
    
    local distance = (hrp.Position - pos).Magnitude
    
    local info = TweenInfo.new(distance / speed)
    
    local Animation = TweenService:Create(hrp, info, {Position = pos})
    Animation:Play()
end

local MiniRobberies = {
    "Cash",
    "CashRegister",
    "DiamondBox",
    "Laptop",
    "Phone",
    "Luggage",
    "ATM",
    "TV",
    "Safe"
}

local function get_closest_small_robbery()
    local closest_robbery = {}
    for i, v in next, workspace.ObjectSelection:GetChildren() do
        if not table.find(MiniRobberies, v.Name) then continue end
        if v:FindFirstChild("Nope") then continue end
        
        local function get_model_pos(model)
            return model:GetPivot().Position
        end
        
        if #closest_robbery == 0 then
            closest_robbery[1] = v
            closest_robbery[2] = get_model_pos(v)
            closest_robbery[3] = (get_model_pos(v) - hrp.Position).Magnitude
        elseif (get_model_pos(v) - hrp.Position).Magnitude < (closest_robbery[2] - hrp.Position).Magnitude then
            closest_robbery[1] = v
            closest_robbery[2] = get_model_pos(v)
            closest_robbery[3] = (get_model_pos(v) - hrp.Position).Magnitude
        end
    end
    return closest_robbery
end

local function get_event(v)
    for i, v in next, v:GetDescendants() do
        if not v:IsA("RemoteEvent") then continue end
        return v
    end
end

repeat
    local closest_robbery = get_closest_small_robbery()
    
    if closest_robbery[1] ~= nil then
        local closest_robbery_pos = closest_robbery[2]
        local evento = get_event(closest_robbery[1])
        tweenTp(closest_robbery_pos.x, closest_robbery_pos.y, closest_robbery_pos.z, flyspeed)
        if evento ~= nil and evento.Parent ~= nil then
            evento:FireServer()
        end
    end
    task.wait(0.05)
until closest_robbery[1] == nil

task.wait(0.2)

shop(getgenv().ServerHop.min, getgenv().ServerHop.max)

task.spawn(function()
    while true do
        task.wait(5)
        shop(getgenv().ServerHop.min, getgenv().ServerHop.max)
    end
end)
