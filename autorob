repeat task.wait() until game:IsLoaded()

local TweenService = game:GetService("TweenService")
local HttpService = game:GetService("HttpService")
local TeleportService = game:GetService("TeleportService")
local Player = game.Players.LocalPlayer

local flyspeed = getgenv().FlySpeed or 50
local retryLimit = 3
local retryCount = 0

-- Function to retrieve the list of available servers
local function getServerList(cursor)
    local placeId = game.PlaceId
    local apiUrl = "https://games.roblox.com/v1/games/" .. placeId .. "/servers/Public?sortOrder=Desc&limit=100"
    if cursor then apiUrl = apiUrl .. "&cursor=" .. cursor end

    local success, response = pcall(function()
        return game:HttpGet(apiUrl)
    end)

    if success then
        local decodedResponse = HttpService:JSONDecode(response)
        return decodedResponse
    else
        warn("Failed to retrieve server list: " .. response)
        return nil
    end
end

-- Server hopping function with retry logic
local function serverHop(minPlayers, maxPlayers)
    local placeId, jobId = game.PlaceId, game.JobId
    local nextCursor = nil

    repeat
        local servers = getServerList(nextCursor)
        if not servers then
            retryCount = retryCount + 1
            if retryCount >= retryLimit then
                warn("Max retries reached. Unable to hop servers.")
                return
            end
            task.wait(3)
        else
            for _, server in pairs(servers.data) do
                if server.playing >= minPlayers and server.playing <= maxPlayers and server.id ~= jobId then
                    local success, result = pcall(TeleportService.TeleportToPlaceInstance, TeleportService, placeId, server.id, Player)
                    if success then
                        return
                    else
                        warn("Teleport failed: " .. result)
                    end
                end
            end
            nextCursor = servers.nextPageCursor
        end
    until not nextCursor
end

-- Robbery items to look for
local MiniRobberies = {"Cash", "CashRegister", "DiamondBox", "Laptop", "Phone", "Luggage", "ATM", "TV", "Safe"}

-- Function to handle teleporting to a robbery object
local function tweenToPosition(pos, speed)
    local hrp = Player.Character:WaitForChild("HumanoidRootPart")
    local distance = (hrp.Position - pos).Magnitude
    local tweenInfo = TweenInfo.new(distance / speed)

    local tween = TweenService:Create(hrp, tweenInfo, {Position = pos})
    tween:Play()
    tween.Completed:Wait()
end

-- Function to steal from the closest available robbery
local function attemptRobbery()
    local hrp = Player.Character:WaitForChild("HumanoidRootPart")
    local closestRobbery, closestDistance = nil, math.huge

    -- Find closest valid robbery
    for _, object in pairs(workspace.ObjectSelection:GetChildren()) do
        if table.find(MiniRobberies, object.Name) and not object:FindFirstChild("Nope") and object:IsDescendantOf(workspace) then
            local objectPosition = object:GetPivot().Position
            local distance = (hrp.Position - objectPosition).Magnitude
            if distance < closestDistance then
                closestDistance = distance
                closestRobbery = object
            end
        end
    end

    if closestRobbery then
        local robberyPos = closestRobbery:GetPivot().Position
        local event = closestRobbery:FindFirstChildWhichIsA("RemoteEvent", true)

        -- Validate robbery object and position
        if robberyPos and event then
            -- Move to robbery and steal
            tweenToPosition(robberyPos, flyspeed)
            event:FireServer()
            print("Stolen from: " .. closestRobbery.Name)
        else
            warn("Failed to teleport or find event for: " .. closestRobbery.Name)
        end
    else
        warn("No valid robbery found.")
    end
end

-- Function to clean unnecessary parts from the game world
local function cleanGameWorld()
    local IgnoreFolder = workspace:WaitForChild("Ignore")
    IgnoreFolder:WaitForChild("ComputerStore"):WaitForChild("Lasers"):Destroy()
    IgnoreFolder:WaitForChild("JewelryStore"):WaitForChild("Jewlery"):WaitForChild("Lasers"):Destroy()

    for _, obj in pairs(IgnoreFolder.WorldObjects:GetChildren()) do
        if obj.Name == "Lasers" then
            obj:Destroy()
        end
    end
end

-- Initial setup and cleanup
task.spawn(function()
    task.wait(40)
    shop(getgenv().ServerHop.min, getgenv().ServerHop.max)
end)

task.wait(getgenv().TimeToLoad or 5)

-- Clean the game world
cleanGameWorld()

-- Robbery loop
task.spawn(function()
    while true do
        attemptRobbery()
        task.wait(0.1)  -- Increased wait time to reduce spamming the robbery event
    end
end)

-- Server hopping loop every 5 seconds
task.spawn(function()
    while true do
        task.wait(5)
        serverHop(getgenv().ServerHop.min, getgenv().ServerHop.max)
    end
end)
